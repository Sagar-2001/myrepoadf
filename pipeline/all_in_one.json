{
	"name": "all_in_one",
	"properties": {
		"activities": [
			{
				"name": "Lookup_cfg",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "select * from dbo.config where enabled=1",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "CFG_DATA",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "filter_target_db",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Lookup_cfg",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup_cfg').output.value",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(item().source,'target')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Filter_student_db",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Lookup_cfg",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup_cfg').output.value",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(item().source,'student')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "filter_target_db",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('filter_target_db').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@bool(equals(item().Load_Flag,'Incremental'))",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Copy_updateFull Data",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SqlServerSource",
												"sqlReaderQuery": {
													"value": "select * from @{item().source_Table}",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "SqlServerSink",
												"writeBehavior": "insert",
												"sqlWriterUseTableLock": false
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "Full_SqlServerTable_source",
												"type": "DatasetReference"
											}
										],
										"outputs": [
											{
												"referenceName": "DB_SQL_SINK",
												"type": "DatasetReference",
												"parameters": {
													"tablename": {
														"value": "@{item().Dest_Table}",
														"type": "Expression"
													}
												}
											}
										]
									}
								],
								"ifTrueActivities": [
									{
										"name": "GetMaxLastUpdateDate CFG",
										"type": "Lookup",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SqlServerSource",
												"sqlReaderQuery": {
													"value": "select watermark_value from dbo.config \nwhere source_Table like '@{item().source_Table}'",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"dataset": {
												"referenceName": "CFG_DATA",
												"type": "DatasetReference"
											}
										}
									},
									{
										"name": "Copy data to target table",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "GetMaxLastUpdateDate CFG",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SqlServerSource",
												"sqlReaderQuery": {
													"value": "select * from @{item().source_Table}\n where \nconvert(datetime,@{item().watermark_column},105)>\nconvert(datetime,substring(replace('@{activity('GetMaxLastUpdateDate CFG').output.firstRow.watermark_value}','T',''),0,20),120)",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "SqlServerSink",
												"writeBehavior": "insert",
												"sqlWriterUseTableLock": false
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "SqlServerTable_source",
												"type": "DatasetReference"
											}
										],
										"outputs": [
											{
												"referenceName": "DB_SQL_SINK",
												"type": "DatasetReference",
												"parameters": {
													"tablename": {
														"value": "@{item().Dest_Table}",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "Stored procedure1",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "Copy data to target table",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[sp_set_water]"
										},
										"linkedServiceName": {
											"referenceName": "leonprimetarget",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						},
						{
							"name": "update_cfg_status",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "If Condition1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "update config\nset status='Succeded'\nwhere Dest_Table='@{item().Dest_Table}'\n\nselect 1",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "CFG_DATA",
									"type": "DatasetReference"
								}
							}
						}
					]
				}
			},
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Filter_student_db",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SqlServerSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SqlServerTable_full_student",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "SqlServerTable_fullstudent",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Lookup2",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Copy data1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "update config\nset status='Succeded'\nwhere Dest_Table='dbo.customer'\n\nselect 1",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "CFG_DATA",
						"type": "DatasetReference"
					}
				}
			}
		],
		"parameters": {
			"Tablename": {
				"type": "string"
			}
		},
		"annotations": []
	}
}