{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "datafactorytrainer"
		},
		"MYSQLSSMS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'MYSQLSSMS'"
		},
		"azuresqllink_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'azuresqllink'"
		},
		"myblobstorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'myblobstorage'"
		},
		"mysqlstorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'mysqlstorage'"
		},
		"RestService1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().apiurl}"
		},
		"RestService2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://uers-api.p.rapidapi.com/api/users"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/102_first')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "cust_must_files",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "FirstCSVDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach_cust_must",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "cust_must_files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('cust_must_files').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "date_cust",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "AdditionalColumnValue",
										"value": {
											"value": "@concat(substring(item().name,10,4),'-',substring(item().name,14,2),'-',substring(item().name,16,2))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy data_cust_table",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "date_cust",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "file_cust",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "date",
													"value": {
														"value": "@variables('AdditionalColumnValue')",
														"type": "Expression"
													}
												},
												{
													"name": "tablename",
													"value": {
														"value": "@variables('addfile')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "SalesDate",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "SalesDate",
														"type": "DateTime",
														"physicalType": "date"
													}
												},
												{
													"source": {
														"name": "ProductId",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ProductId",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "Rate",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Rate",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "Qty",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Qty",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "Sales",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Sales",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "DateTime",
														"physicalType": "date"
													}
												},
												{
													"source": {
														"name": "tablename",
														"type": "String"
													},
													"sink": {
														"name": "tablename",
														"type": "String",
														"physicalType": "nvarchar"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "FirstCSVFileDataset",
											"type": "DatasetReference",
											"parameters": {
												"File": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "FirstSQLTableDataset",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "file_cust",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "addfile",
										"value": {
											"value": "@substring(item().name,0,8 )",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"AdditionalColumnValue": {
						"type": "String"
					},
					"addfile": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-27T19:00:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/FirstCSVDataset')]",
				"[concat(variables('factoryId'), '/datasets/FirstCSVFileDataset')]",
				"[concat(variables('factoryId'), '/datasets/FirstSQLTableDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/102_second')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "master_files",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Secondcsvdataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach_master",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "master_files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('master_files').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "date_master",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "AdditionalColumnValue",
										"value": {
											"value": "@concat(substring(item().name,20,4),'-',substring(item().name,24,2),'-',substring(item().name,26,2))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy data_master",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "date_master",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "file_master",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "keydate",
													"value": {
														"value": "@variables('AdditionalColumnValue')",
														"type": "Expression"
													}
												},
												{
													"name": "date",
													"value": {
														"value": "@variables('addfile')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "SalesDate",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "SalesDate",
														"type": "DateTime",
														"physicalType": "date"
													}
												},
												{
													"source": {
														"name": "ProductId",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ProductId",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "Rate",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Rate",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "Qty",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Qty",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "Sales",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Sales",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "keydate",
														"type": "String"
													},
													"sink": {
														"name": "datekey",
														"type": "DateTime",
														"physicalType": "date"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String",
														"physicalType": "varchar"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "secondCSVfiledataset",
											"type": "DatasetReference",
											"parameters": {
												"file": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "secondSQLtable",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "file_master",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "addfile",
										"value": {
											"value": "@substring(item().name,20,8 )",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"AdditionalColumnValue": {
						"type": "String"
					},
					"addfile": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-27T19:00:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Secondcsvdataset')]",
				"[concat(variables('factoryId'), '/datasets/secondCSVfiledataset')]",
				"[concat(variables('factoryId'), '/datasets/secondSQLtable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/102_third')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "h_ecom_files",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "thirdcsvdataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach_master",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "h_ecom_files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('h_ecom_files').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data_master",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "SalesDate",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "SalesDate",
														"type": "DateTime",
														"physicalType": "date"
													}
												},
												{
													"source": {
														"name": "ProductId",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ProductId",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "Rate",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Rate",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "Qty",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Qty",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "Sales",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Sales",
														"type": "Int32",
														"physicalType": "int"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "thirdcsvfiledataset",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "thirdSQLtable",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"AdditionalColumnValue": {
						"type": "String"
					},
					"addfile": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-27T19:12:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/thirdcsvdataset')]",
				"[concat(variables('factoryId'), '/datasets/thirdcsvfiledataset')]",
				"[concat(variables('factoryId'), '/datasets/thirdSQLtable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Api_single')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['login']"
										},
										"sink": {
											"name": "login"
										}
									},
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"name": "id"
										}
									},
									{
										"source": {
											"path": "$['node_id']"
										},
										"sink": {
											"name": "node_id"
										}
									},
									{
										"source": {
											"path": "$['url']"
										},
										"sink": {
											"name": "url"
										}
									},
									{
										"source": {
											"path": "$['repos_url']"
										},
										"sink": {
											"name": "repos_url"
										}
									},
									{
										"source": {
											"path": "$['events_url']"
										},
										"sink": {
											"name": "events_url"
										}
									},
									{
										"source": {
											"path": "$['hooks_url']"
										},
										"sink": {
											"name": "hooks_url"
										}
									},
									{
										"source": {
											"path": "$['issues_url']"
										},
										"sink": {
											"name": "issues_url"
										}
									},
									{
										"source": {
											"path": "$['members_url']"
										},
										"sink": {
											"name": "members_url"
										}
									},
									{
										"source": {
											"path": "$['public_members_url']"
										},
										"sink": {
											"name": "public_members_url"
										}
									},
									{
										"source": {
											"path": "$['avatar_url']"
										},
										"sink": {
											"name": "avatar_url"
										}
									},
									{
										"source": {
											"path": "$['description']"
										},
										"sink": {
											"name": "description"
										}
									}
								],
								"collectionReference": "$['data']"
							}
						},
						"inputs": [
							{
								"referenceName": "RestResource2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "apisingle",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SchemaValidation]",
							"storedProcedureParameters": {
								"sourceTable": {
									"value": "dbo.api",
									"type": "String"
								},
								"targetTable": {
									"value": "dbo.api_sink",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "mysqlstorage",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-30T20:00:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource2')]",
				"[concat(variables('factoryId'), '/datasets/apisingle')]",
				"[concat(variables('factoryId'), '/linkedServices/mysqlstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Stored procedure schema_drift')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stored procedure schema_drift",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SchemaValidation]",
							"storedProcedureParameters": {
								"sourceTable": {
									"value": "dbo.table1",
									"type": "String"
								},
								"targetTable": {
									"value": "dbo.table2",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "mysqlstorage",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-04-01T13:38:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mysqlstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/append_variablepipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.country",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "for_append",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "countryoutput",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "countryname",
							"value": {
								"value": "@variables('countryoutput')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"country": {
						"type": "array",
						"defaultValue": [
							"india",
							"US",
							"CHINA",
							"UK"
						]
					}
				},
				"variables": {
					"countryoutput": {
						"type": "Array"
					},
					"countryname": {
						"type": "Array"
					},
					"x": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-22T20:37:19Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/array_to_string_email')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get_email_files",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "email_csv",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get_email_files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get_email_files').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "email",
										"value": {
											"value": "@concat(item().Login_email,';',variables('emailtemp'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable2",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "emailtemp",
										"value": {
											"value": "@variables('email')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"email": {
						"type": "String"
					},
					"emailtemp": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-29T20:32:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/email_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/array_to_string_email_join')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get_email_files",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "email_csv",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get_email_files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get_email_files').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Append variable1",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "emailtemp",
										"value": {
											"value": "@item().Login_email",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "email",
							"value": {
								"value": "@join(variables('emailtemp'),' ' )",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"email": {
						"type": "String"
					},
					"emailtemp": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-29T20:40:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/email_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_dat_blob_to_SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "date",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "csv_to_other",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "table_from_blob",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"x": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-22T20:37:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/csv_to_other')]",
				"[concat(variables('factoryId'), '/datasets/table_from_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "csv_to_other",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "output",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-22T16:46:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/csv_to_other')]",
				"[concat(variables('factoryId'), '/datasets/output')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/email_failure_task')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "email_send_source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "logging_output",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sendemail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://sagarazure.azurewebsites.net:443/api/saagar/triggers/manual/invoke?api-version=2022-05-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=d7OKkCVj80SY9evcS3_l2nZfOQDtda8J8JLZOBlAaCI",
							"method": "POST",
							"headers": {
								"content-type": "application/json"
							},
							"body": {
								"value": "{\n        \"pipelinw\":\"@{pipeline().Pipeline}\",\n        \"errormessage\": \"@{activity('Copy data1').Error.Message}\",\n        \"datafactoryname\": \"@{pipeline().DataFactory}\",\n        \"runid\": \"@{pipeline().RunId}\"\n}\n            ",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-29T08:17:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/email_send_source')]",
				"[concat(variables('factoryId'), '/datasets/logging_output')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/full_load_incremental')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from sagar.water_mark where isactive=0",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "full_source",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "full_source1",
											"type": "DatasetReference",
											"parameters": {
												"tablename": {
													"value": "@item().Sourcetable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "full_sink",
											"type": "DatasetReference",
											"parameters": {
												"tablename": {
													"value": "@item().targettable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-04-01T13:38:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/full_source')]",
				"[concat(variables('factoryId'), '/datasets/full_source1')]",
				"[concat(variables('factoryId'), '/datasets/full_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/incremental_single')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from sagar.tbl_source where PurchaseDate>(\nselect isnull(max(PurchaseDate),'2020-01-01') from sagar.tbl_target)",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_inc_single",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_inc_target",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-25T10:57:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_inc_single')]",
				"[concat(variables('factoryId'), '/datasets/ds_inc_target')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/incrementaldata_watermark')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "watermark_lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from water_mark_incremental where isactive=1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "lookup_watermark",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "lookup_value_watermark",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "watermark_lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('watermark_lookup').output.value\n",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "copy_watermark_target",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@item().sourcequery",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "watermark_source",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "targettable_watermark",
											"type": "DatasetReference",
											"parameters": {
												"tablename": {
													"value": "@item().targettable",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "data_incremental_lookup",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "copy_watermark_target",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select isnull(max(@{item().watermarkcolumn}),\n'@{item().watermarkvalue}') as newwatermarkvalue \nfrom @{item().targettable}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "date_incremental_lookup",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "update_watermark_value",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "data_incremental_lookup",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[watermarkupdate]",
										"storedProcedureParameters": {
											"maxdate": {
												"value": {
													"value": "@activity('data_incremental_lookup').output.firstRow.newwatermarkvalue",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"tablename": {
												"value": {
													"value": "@item().targettable",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "azuresqllink",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-25T10:57:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/lookup_watermark')]",
				"[concat(variables('factoryId'), '/datasets/watermark_source')]",
				"[concat(variables('factoryId'), '/datasets/targettable_watermark')]",
				"[concat(variables('factoryId'), '/datasets/date_incremental_lookup')]",
				"[concat(variables('factoryId'), '/linkedServices/azuresqllink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/incrementaldata_watermark2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "watermark_lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from sagar.water_mark where isactive=1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "lookup_watermark",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "lookup_value_watermark",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "watermark_lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('watermark_lookup').output.value\n",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "copy_watermark_target",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@item().sourcequery",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "watermark_source",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "copy_target_watermark",
											"type": "DatasetReference",
											"parameters": {
												"tablename": {
													"value": "@item().targettable",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "data_incremental_lookup",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "copy_watermark_target",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select isnull(max(@{item().watermarkcolumn}),\n'@{item().watermarkvalue}') as newwatermarkvalue \nfrom @{item().targettable}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "date_incremental_llokup",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "update_watermark_value",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "data_incremental_lookup",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[sagar].[watermarkupdate]",
										"storedProcedureParameters": {
											"maxdate": {
												"value": {
													"value": "@activity('data_incremental_lookup').output.firstRow.newwatermarkvalue",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"tablename": {
												"value": {
													"value": "@item().targettable",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "azuresqllink",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-26T08:10:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/lookup_watermark')]",
				"[concat(variables('factoryId'), '/datasets/watermark_source')]",
				"[concat(variables('factoryId'), '/datasets/copy_target_watermark')]",
				"[concat(variables('factoryId'), '/datasets/date_incremental_llokup')]",
				"[concat(variables('factoryId'), '/linkedServices/azuresqllink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/incrementaldata_watermark2_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "watermark_lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from sagar.water_mark ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "lookup_watermark",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "lookup_value_watermark",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "watermark_lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('watermark_lookup').output.value\n",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "copy_watermark_target",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "If Condition1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@item().sourcequery",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "watermark_source",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "copy_target_watermark",
											"type": "DatasetReference",
											"parameters": {
												"tablename": {
													"value": "@item().targettable",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "data_incremental_lookup",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "copy_watermark_target",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select isnull(max(@{item().watermarkcolumn}),\n'@{item().watermarkvalue}') as newwatermarkvalue \nfrom @{item().targettable}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "date_incremental_llokup",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "update_watermark_value",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "data_incremental_lookup",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[sagar].[watermarkupdate]",
										"storedProcedureParameters": {
											"maxdate": {
												"value": {
													"value": "@activity('data_incremental_lookup').output.firstRow.newwatermarkvalue",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"tablename": {
												"value": {
													"value": "@item().targettable",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "azuresqllink",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@item().isvalid=1",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy data2",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "If Condition1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": "s",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "full_load",
											"type": "DatasetReference",
											"parameters": {
												"tablename": {
													"value": "@item().Sourcetable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "full_target",
											"type": "DatasetReference",
											"parameters": {
												"tablename": {
													"value": "@item().targettable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-04-01T13:38:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/lookup_watermark')]",
				"[concat(variables('factoryId'), '/datasets/watermark_source')]",
				"[concat(variables('factoryId'), '/datasets/copy_target_watermark')]",
				"[concat(variables('factoryId'), '/datasets/date_incremental_llokup')]",
				"[concat(variables('factoryId'), '/linkedServices/azuresqllink')]",
				"[concat(variables('factoryId'), '/datasets/full_load')]",
				"[concat(variables('factoryId'), '/datasets/full_target')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/incrementaldata_watermark2_copy2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "watermark_lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from sagar.water_mark ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "lookup_watermark",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "lookup_value_watermark",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "watermark_lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('watermark_lookup').output.value\n",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@item().isactive",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "full load pipeline",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "full_load_incremental",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "incremental pipeline",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "incrementaldata_watermark2",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-04-01T13:38:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/lookup_watermark')]",
				"[concat(variables('factoryId'), '/pipelines/full_load_incremental')]",
				"[concat(variables('factoryId'), '/pipelines/incrementaldata_watermark2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrate_pipelines')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "cust_mstr",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "102_first",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "export_second",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "cust_mstr",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "102_second",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "h_com_third",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "export_second",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "102_third",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-28T11:29:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/102_first')]",
				"[concat(variables('factoryId'), '/pipelines/102_second')]",
				"[concat(variables('factoryId'), '/pipelines/102_third')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/json_sql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Json_input",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "json_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-25T13:30:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json_input')]",
				"[concat(variables('factoryId'), '/datasets/json_table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/logging_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "logging_input",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "l1_csv",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach_logging",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "logging_input",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('logging_input').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data_logging",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": "*.csv",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "l1_csv",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "logging_output",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Sp_logging",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data_logging",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[sagar].[sp_logging_table]",
										"storedProcedureParameters": {
											"DataFactory_name": {
												"value": {
													"value": "@pipeline().DataFactory",
													"type": "Expression"
												},
												"type": "String"
											},
											"Destination": {
												"value": {
													"value": "@item().name",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorloggedTime": {
												"value": {
													"value": "@utcNow()",
													"type": "Expression"
												},
												"type": "String"
											},
											"Execution_successful": {
												"value": "Succesful",
												"type": "String"
											},
											"Pipeline_Name": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"Runid": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "mysqlstorage",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-28T10:47:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/l1_csv')]",
				"[concat(variables('factoryId'), '/datasets/logging_output')]",
				"[concat(variables('factoryId'), '/linkedServices/mysqlstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lookup_vs_getmetadata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "to_look_into_csv",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "csv_to_other",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "to_fetch_value_only",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "to_look_into_csv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('to_look_into_csv').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "store_address",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "x",
										"value": {
											"value": "@item().location",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"x": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-22T20:37:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/csv_to_other')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rest_api_copy_table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "api_to_table_copy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['Email']"
										},
										"sink": {
											"name": "Email"
										}
									},
									{
										"source": {
											"path": "[['Image']"
										},
										"sink": {
											"name": "Image"
										}
									},
									{
										"source": {
											"path": "[['LastLogin']"
										},
										"sink": {
											"name": "LastLogin"
										}
									},
									{
										"source": {
											"path": "[['Name']"
										},
										"sink": {
											"name": "Name"
										}
									},
									{
										"source": {
											"path": "[['Role']"
										},
										"sink": {
											"name": "Role"
										}
									},
									{
										"source": {
											"path": "[['Status']"
										},
										"sink": {
											"name": "Status"
										}
									},
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id"
										}
									}
								],
								"collectionReference": "$['data']"
							}
						},
						"inputs": [
							{
								"referenceName": "RestResource3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "check_schema_drift",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "api_to_table_copy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SchemaValidation]",
							"storedProcedureParameters": {
								"sourceTable": {
									"value": "getallusers_target",
									"type": "String"
								},
								"targetTable": {
									"value": "getallusers",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "mysqlstorage",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "data_of_source_table",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "check_schema_drift",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "move_each_data_from_source",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "data_of_source_table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('data_of_source_table').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "perform_fullload_incremental",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select * from sagar.getallusers_target where LastLogin>(\nselect isnull(max(LastLogin),'2020-01-01') from sagar.getallusers)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "copy_apidata_target",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "copy_to_target_apidata",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource3')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/linkedServices/mysqlstorage')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]",
				"[concat(variables('factoryId'), '/datasets/copy_apidata_target')]",
				"[concat(variables('factoryId'), '/datasets/copy_to_target_apidata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rest_api_task')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://reqres.in/api/users",
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1,activity('Web1').output.total_pages)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "id",
														"type": "Int64"
													}
												},
												{
													"source": {
														"path": "[['email']"
													},
													"sink": {
														"name": "email",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['first_name']"
													},
													"sink": {
														"name": "first_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['last_name']"
													},
													"sink": {
														"name": "last_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avatar']"
													},
													"sink": {
														"name": "avatar",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']"
										}
									},
									"inputs": [
										{
											"referenceName": "RestResource1",
											"type": "DatasetReference",
											"parameters": {
												"pagequery": {
													"value": "?page=@{item()}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "apitable",
											"type": "DatasetReference",
											"parameters": {
												"tableapi": {
													"value": "apitable@{item()}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-30T20:09:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource1')]",
				"[concat(variables('factoryId'), '/datasets/apitable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/skip_blank_files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get_csv_files",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "csv_get_sale",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get_csv_files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get_csv_files').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "get_file_name",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "x",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								{
									"name": "count_value_lookup",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "get_file_name",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"dataset": {
											"referenceName": "csv_files",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@variables('x')",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "If Condition_count_copy",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "count_value_lookup",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(activity('count_value_lookup').output.count,0 )",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Copy data1",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "csv_files",
														"type": "DatasetReference",
														"parameters": {
															"filename": {
																"value": "@variables('x')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "sql_sales_sink",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"x": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-26T08:36:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/csv_get_sale')]",
				"[concat(variables('factoryId'), '/datasets/csv_files')]",
				"[concat(variables('factoryId'), '/datasets/sql_sales_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mysqlstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "sagar",
					"table": "getallusers_target"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mysqlstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mysqlstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Email",
						"type": "nvarchar"
					},
					{
						"name": "Image",
						"type": "nvarchar"
					},
					{
						"name": "LastLogin",
						"type": "nvarchar"
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "Role",
						"type": "nvarchar"
					},
					{
						"name": "Status",
						"type": "bit"
					},
					{
						"name": "id",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "sagar",
					"table": "getallusers_target"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mysqlstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FirstCSVDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "myblobstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "task102"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/myblobstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FirstCSVFileDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "myblobstorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"File": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().File",
							"type": "Expression"
						},
						"container": "task102"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/myblobstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FirstSQLTableDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mysqlstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "Date",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CUST_MSTR"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mysqlstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "myblobstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "example_1.json",
						"container": "jsonfiles"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"fruit": {
							"type": "string"
						},
						"size": {
							"type": "string"
						},
						"color": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/myblobstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService1",
					"type": "LinkedServiceReference",
					"parameters": {
						"apiurl": "https://reqres.in/api/users"
					}
				},
				"parameters": {
					"pagequery": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().pagequery",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService1",
					"type": "LinkedServiceReference",
					"parameters": {
						"apiurl": "https://api.github.com/users/hadley/orgs"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Secondcsvdataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "myblobstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "master-child-export"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SalesDate",
						"type": "String"
					},
					{
						"name": "ProductId",
						"type": "String"
					},
					{
						"name": "Rate",
						"type": "String"
					},
					{
						"name": "Qty",
						"type": "String"
					},
					{
						"name": "Sales",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/myblobstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/apisingle')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mysqlstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "api"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mysqlstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/apitable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mysqlstorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tableapi": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().tableapi",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mysqlstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_apidata_target')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azuresqllink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azuresqllink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_target_watermark')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mysqlstorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@split(dataset().tablename,'.')[0]",
						"type": "Expression"
					},
					"table": {
						"value": "@split(dataset().tablename,'.')[1]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mysqlstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_to_target_apidata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mysqlstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Email",
						"type": "nvarchar"
					},
					{
						"name": "Image",
						"type": "nvarchar"
					},
					{
						"name": "LastLogin",
						"type": "nvarchar"
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "Role",
						"type": "nvarchar"
					},
					{
						"name": "Status",
						"type": "bit"
					},
					{
						"name": "id",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "sagar",
					"table": "getallusers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mysqlstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csv_files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "myblobstorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"container": "salescsv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/myblobstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csv_get_sale')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "myblobstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "salescsv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/myblobstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csv_to_other')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "myblobstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "addresses.csv",
						"container": "csvfiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "firstname",
						"type": "String"
					},
					{
						"name": "lastname",
						"type": "String"
					},
					{
						"name": "address1",
						"type": "String"
					},
					{
						"name": "location",
						"type": "String"
					},
					{
						"name": "code",
						"type": "String"
					},
					{
						"name": "pin",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/myblobstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/date_incremental_llokup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MYSQLSSMS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MYSQLSSMS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/date_incremental_lookup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azuresqllink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azuresqllink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_inc_single')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mysqlstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mysqlstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_inc_target')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mysqlstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PurchaseID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductName",
						"type": "varchar"
					},
					{
						"name": "Price",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "PurchaseDate",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "sagar",
					"table": "tbl_target"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mysqlstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/email_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "myblobstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "email.csv",
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Login_email",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/myblobstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/email_send_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "myblobstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "abc.csv",
						"container": "csvfiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/myblobstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/full_load')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mysqlstorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@split(dataset().tablename,'.')[0]",
						"type": "Expression"
					},
					"table": {
						"value": "@split(dataset().tablename,'.')[1]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mysqlstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/full_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mysqlstorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@split(dataset().tablename,'.')[0]",
						"type": "Expression"
					},
					"table": {
						"value": "@split(dataset().tablename,'.')[1]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mysqlstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/full_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mysqlstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mysqlstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/full_source1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mysqlstorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@split(dataset().tablename,'.')[0]",
						"type": "Expression"
					},
					"table": {
						"value": "@split(dataset().tablename,'.')[1]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mysqlstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/full_target')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mysqlstorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@split(dataset().tablename,'.')[0]",
						"type": "Expression"
					},
					"table": {
						"value": "@split(dataset().tablename,'.')[1]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mysqlstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/json_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azuresqllink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "sagar",
					"table": "json_table"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azuresqllink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/l1_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "myblobstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "salescsv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/myblobstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/logging_output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "myblobstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "firstname",
						"type": "String"
					},
					{
						"name": "lastname",
						"type": "String"
					},
					{
						"name": "address1",
						"type": "String"
					},
					{
						"name": "location",
						"type": "String"
					},
					{
						"name": "code",
						"type": "String"
					},
					{
						"name": "pin",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/myblobstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lookup_watermark')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azuresqllink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azuresqllink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "myblobstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/myblobstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/schema_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mysqlstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Age",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Email",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "schema_target"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mysqlstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/schema_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mysqlstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Age",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Email",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "schema_source"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mysqlstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/secondCSVfiledataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "myblobstorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file",
							"type": "Expression"
						},
						"container": "master-child-export"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SalesDate",
						"type": "String"
					},
					{
						"name": "ProductId",
						"type": "String"
					},
					{
						"name": "Rate",
						"type": "String"
					},
					{
						"name": "Qty",
						"type": "String"
					},
					{
						"name": "Sales",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/myblobstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/secondSQLtable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mysqlstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesDate",
						"type": "date"
					},
					{
						"name": "ProductId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Rate",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Qty",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Sales",
						"type": "int",
						"precision": 10
					},
					{
						"name": "datekey",
						"type": "date"
					},
					{
						"name": "date",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "master_child_export"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mysqlstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_sales_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mysqlstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesDate",
						"type": "date"
					},
					{
						"name": "ProductId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Rate",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Qty",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Sales",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "sales_sink"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mysqlstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/table_from_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mysqlstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "sagar",
					"table": "email"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mysqlstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/targettable_watermark')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azuresqllink",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "sagar",
					"table": {
						"value": "@split(dataset().tablename,'.')[1]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azuresqllink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/thirdSQLtable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mysqlstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesDate",
						"type": "date"
					},
					{
						"name": "ProductId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Rate",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Qty",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Sales",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "H_ECOM_ORDER"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mysqlstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/thirdcsvdataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "myblobstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "h-ecom-102"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/myblobstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/thirdcsvfiledataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "myblobstorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"container": "h-ecom-102"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/myblobstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/watermark_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azuresqllink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azuresqllink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MYSQLSSMS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('MYSQLSSMS_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SSMS",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SSMS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"apiurl": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService2_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous",
					"authHeaders": {
						"X-RapidAPI-Key": {
							"type": "SecureString",
							"value": "**********"
						},
						"X-RapidAPI-Host": {
							"type": "SecureString",
							"value": "**********"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/azuresqllink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('azuresqllink_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/myblobstorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('myblobstorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/mysqlstorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('mysqlstorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SSMS')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		}
	]
}